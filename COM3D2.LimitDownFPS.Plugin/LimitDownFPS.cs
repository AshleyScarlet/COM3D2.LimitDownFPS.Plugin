using System;
using System.IO;
using System.Reflection;
using System.Text;
using UnityEngine;
using UnityEngine.SceneManagement;
using UnityInjector;
using UnityInjector.Attributes;

namespace COM3D2.LimitDownFPS.Plugin
{
    [PluginName("LimitDownFPS")]
    [PluginVersion("1.1.0")]
    public sealed class LimitDownFPS : PluginBase
    {
        private void Awake()
        {
            GearMenu.Buttons.Add("LimitDownFPS", "FPS制限", IconBytes, ToggleGUI);
            SceneManager.sceneLoaded += OnSceneLoaded;

			PrevTargetFrameRate = Application.targetFrameRate;
			TargetFrameRate = LoadTargetFrameRate();
			_InputText = TargetFrameRate.ToString();
        }

        private void OnApplicationFocus(bool hasFocus)
        {
            int value = PrevTargetFrameRate;
			if (!hasFocus)
            {
                PrevTargetFrameRate = Application.targetFrameRate;
                value = TargetFrameRate;
			}

			Application.targetFrameRate = value;
        }

		private void OnApplicationQuit()
        {
			SaveTargetFrameRate();
        }

        private void ToggleGUI(GameObject obj)
        {
            IsGUIVisible = !IsGUIVisible;
        }

        private void OnSceneLoaded(Scene arg0, LoadSceneMode arg1)
        {
            IsGUIVisible = false;
        }

        private void OnGUI()
        {
            if (!IsGUIVisible)
                return;

			var windowGUIStyle = _WindowGUIStyle;
			if (windowGUIStyle == null)
			{
				windowGUIStyle = new GUIStyle("box");
				windowGUIStyle.fontSize = Util.GetPixel(12);
				windowGUIStyle.alignment = TextAnchor.UpperRight;
				_WindowGUIStyle = windowGUIStyle;
			}

			_WindowRect = GUI.Window(WindowID, _WindowRect, OnGUIWindow, "LimitDownFPS 1.1.0", windowGUIStyle);
		}

		private void OnGUIWindow(int windowID)
		{
			var inputText = _InputText;
			int value = TargetFrameRate;

            GUILayout.BeginHorizontal(Array<GUILayoutOption>.Empty);
			{
				if (GUILayout.Button("×", Array<GUILayoutOption>.Empty))
				{
					IsGUIVisible = false;
				}
				GUILayout.FlexibleSpace();
			}
			GUILayout.EndHorizontal();

            GUILayout.BeginHorizontal(Array<GUILayoutOption>.Empty);
			{
				GUILayout.Space(20);
				GUILayout.Label("FPS : ", Array<GUILayoutOption>.Empty);
				GUILayout.BeginVertical(Array<GUILayoutOption>.Empty);
				{
					value = (int)GUILayout.HorizontalSlider(value, 1, 60, Array<GUILayoutOption>.Empty);
					if (value != TargetFrameRate)
					{
						TargetFrameRate = value;
						_InputText = value.ToString();
						inputText = _InputText;
					}

					inputText = GUILayout.TextField(inputText, Array<GUILayoutOption>.Empty);
					if (string.IsNullOrEmpty(inputText) || (!inputText.Equals(_InputText) && int.TryParse(inputText, out value)))
                    {
						TargetFrameRate = value;
						_InputText = inputText;
                    }
				}
				GUILayout.EndVertical();
			}
			GUILayout.EndHorizontal();
			GUI.DragWindow();

			if (Input.GetMouseButtonUp(0) && IsMouseOnGUI())
			{
				Input.ResetInputAxes();
			}
		}

		private bool IsMouseOnGUI()
		{
			Vector2 point = new Vector2(Input.mousePosition.x, (float)Screen.height - Input.mousePosition.y);
			return _WindowRect.Contains(point);
		}

		private unsafe static int LoadTargetFrameRate()
        {
			var path = ConfigFilePath;
			if (File.Exists(path))
            {
				var buffer = new StringBuilder(64);
				Util.GetPrivateProfileString("DownLimitFPS", "TargetFrameRate", "30", buffer, (uint)buffer.Capacity, path);
				if (int.TryParse(buffer.ToString(), out var value))
				{
					return value;
				}
            }

			return 30;
        }

		private static void SaveTargetFrameRate()
        {
			Util.WritePrivateProfileString("DownLimitFPS", "TargetFrameRate", TargetFrameRate.ToString(), ConfigFilePath);
        }

		public static bool IsGUIVisible { get; set; } = false;
        public static int TargetFrameRate { get; set; }
        private static int PrevTargetFrameRate { get; set; }

		private GUIStyle _WindowGUIStyle;
		private Rect _WindowRect = new Rect(20, 20, 260, 80);
		private string _InputText;

		private const int WindowID = 5567;
		private static readonly string ConfigFilePath = Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location) + @"\Config\LimitDownFPS.ini";

		private static readonly byte[] IconBytes = new byte[] 
		{
			0x89, 0x50, 0x4E, 0x47, 0x0D, 0x0A, 0x1A, 0x0A, 0x00, 0x00, 0x00, 0x0D, 0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x20, 0x08, 0x06, 0x00, 0x00, 0x00, 0x73, 0x7A, 0x7A,
			0xF4, 0x00, 0x00, 0x00, 0x09, 0x70, 0x48, 0x59, 0x73, 0x00, 0x00, 0x2E, 0x23, 0x00, 0x00, 0x2E, 0x23, 0x01, 0x78, 0xA5, 0x3F, 0x76, 0x00, 0x00, 0x07, 0x0F, 0x69, 0x54, 0x58, 0x74, 0x58, 0x4D,
			0x4C, 0x3A, 0x63, 0x6F, 0x6D, 0x2E, 0x61, 0x64, 0x6F, 0x62, 0x65, 0x2E, 0x78, 0x6D, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x3F, 0x78, 0x70, 0x61, 0x63, 0x6B, 0x65, 0x74, 0x20, 0x62, 0x65,
			0x67, 0x69, 0x6E, 0x3D, 0x22, 0xEF, 0xBB, 0xBF, 0x22, 0x20, 0x69, 0x64, 0x3D, 0x22, 0x57, 0x35, 0x4D, 0x30, 0x4D, 0x70, 0x43, 0x65, 0x68, 0x69, 0x48, 0x7A, 0x72, 0x65, 0x53, 0x7A, 0x4E, 0x54,
			0x63, 0x7A, 0x6B, 0x63, 0x39, 0x64, 0x22, 0x3F, 0x3E, 0x20, 0x3C, 0x78, 0x3A, 0x78, 0x6D, 0x70, 0x6D, 0x65, 0x74, 0x61, 0x20, 0x78, 0x6D, 0x6C, 0x6E, 0x73, 0x3A, 0x78, 0x3D, 0x22, 0x61, 0x64,
			0x6F, 0x62, 0x65, 0x3A, 0x6E, 0x73, 0x3A, 0x6D, 0x65, 0x74, 0x61, 0x2F, 0x22, 0x20, 0x78, 0x3A, 0x78, 0x6D, 0x70, 0x74, 0x6B, 0x3D, 0x22, 0x41, 0x64, 0x6F, 0x62, 0x65, 0x20, 0x58, 0x4D, 0x50,
			0x20, 0x43, 0x6F, 0x72, 0x65, 0x20, 0x35, 0x2E, 0x36, 0x2D, 0x63, 0x31, 0x34, 0x32, 0x20, 0x37, 0x39, 0x2E, 0x31, 0x36, 0x30, 0x39, 0x32, 0x34, 0x2C, 0x20, 0x32, 0x30, 0x31, 0x37, 0x2F, 0x30,
			0x37, 0x2F, 0x31, 0x33, 0x2D, 0x30, 0x31, 0x3A, 0x30, 0x36, 0x3A, 0x33, 0x39, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x3E, 0x20, 0x3C, 0x72, 0x64, 0x66, 0x3A, 0x52, 0x44, 0x46,
			0x20, 0x78, 0x6D, 0x6C, 0x6E, 0x73, 0x3A, 0x72, 0x64, 0x66, 0x3D, 0x22, 0x68, 0x74, 0x74, 0x70, 0x3A, 0x2F, 0x2F, 0x77, 0x77, 0x77, 0x2E, 0x77, 0x33, 0x2E, 0x6F, 0x72, 0x67, 0x2F, 0x31, 0x39,
			0x39, 0x39, 0x2F, 0x30, 0x32, 0x2F, 0x32, 0x32, 0x2D, 0x72, 0x64, 0x66, 0x2D, 0x73, 0x79, 0x6E, 0x74, 0x61, 0x78, 0x2D, 0x6E, 0x73, 0x23, 0x22, 0x3E, 0x20, 0x3C, 0x72, 0x64, 0x66, 0x3A, 0x44,
			0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6F, 0x6E, 0x20, 0x72, 0x64, 0x66, 0x3A, 0x61, 0x62, 0x6F, 0x75, 0x74, 0x3D, 0x22, 0x22, 0x20, 0x78, 0x6D, 0x6C, 0x6E, 0x73, 0x3A, 0x78, 0x6D,
			0x70, 0x3D, 0x22, 0x68, 0x74, 0x74, 0x70, 0x3A, 0x2F, 0x2F, 0x6E, 0x73, 0x2E, 0x61, 0x64, 0x6F, 0x62, 0x65, 0x2E, 0x63, 0x6F, 0x6D, 0x2F, 0x78, 0x61, 0x70, 0x2F, 0x31, 0x2E, 0x30, 0x2F, 0x22,
			0x20, 0x78, 0x6D, 0x6C, 0x6E, 0x73, 0x3A, 0x64, 0x63, 0x3D, 0x22, 0x68, 0x74, 0x74, 0x70, 0x3A, 0x2F, 0x2F, 0x70, 0x75, 0x72, 0x6C, 0x2E, 0x6F, 0x72, 0x67, 0x2F, 0x64, 0x63, 0x2F, 0x65, 0x6C,
			0x65, 0x6D, 0x65, 0x6E, 0x74, 0x73, 0x2F, 0x31, 0x2E, 0x31, 0x2F, 0x22, 0x20, 0x78, 0x6D, 0x6C, 0x6E, 0x73, 0x3A, 0x70, 0x68, 0x6F, 0x74, 0x6F, 0x73, 0x68, 0x6F, 0x70, 0x3D, 0x22, 0x68, 0x74,
			0x74, 0x70, 0x3A, 0x2F, 0x2F, 0x6E, 0x73, 0x2E, 0x61, 0x64, 0x6F, 0x62, 0x65, 0x2E, 0x63, 0x6F, 0x6D, 0x2F, 0x70, 0x68, 0x6F, 0x74, 0x6F, 0x73, 0x68, 0x6F, 0x70, 0x2F, 0x31, 0x2E, 0x30, 0x2F,
			0x22, 0x20, 0x78, 0x6D, 0x6C, 0x6E, 0x73, 0x3A, 0x78, 0x6D, 0x70, 0x4D, 0x4D, 0x3D, 0x22, 0x68, 0x74, 0x74, 0x70, 0x3A, 0x2F, 0x2F, 0x6E, 0x73, 0x2E, 0x61, 0x64, 0x6F, 0x62, 0x65, 0x2E, 0x63,
			0x6F, 0x6D, 0x2F, 0x78, 0x61, 0x70, 0x2F, 0x31, 0x2E, 0x30, 0x2F, 0x6D, 0x6D, 0x2F, 0x22, 0x20, 0x78, 0x6D, 0x6C, 0x6E, 0x73, 0x3A, 0x73, 0x74, 0x45, 0x76, 0x74, 0x3D, 0x22, 0x68, 0x74, 0x74,
			0x70, 0x3A, 0x2F, 0x2F, 0x6E, 0x73, 0x2E, 0x61, 0x64, 0x6F, 0x62, 0x65, 0x2E, 0x63, 0x6F, 0x6D, 0x2F, 0x78, 0x61, 0x70, 0x2F, 0x31, 0x2E, 0x30, 0x2F, 0x73, 0x54, 0x79, 0x70, 0x65, 0x2F, 0x52,
			0x65, 0x73, 0x6F, 0x75, 0x72, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6E, 0x74, 0x23, 0x22, 0x20, 0x78, 0x6D, 0x70, 0x3A, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6F, 0x72, 0x54, 0x6F, 0x6F, 0x6C, 0x3D, 0x22,
			0x41, 0x64, 0x6F, 0x62, 0x65, 0x20, 0x50, 0x68, 0x6F, 0x74, 0x6F, 0x73, 0x68, 0x6F, 0x70, 0x20, 0x43, 0x43, 0x20, 0x28, 0x57, 0x69, 0x6E, 0x64, 0x6F, 0x77, 0x73, 0x29, 0x22, 0x20, 0x78, 0x6D,
			0x70, 0x3A, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x65, 0x3D, 0x22, 0x32, 0x30, 0x32, 0x31, 0x2D, 0x30, 0x37, 0x2D, 0x32, 0x35, 0x54, 0x31, 0x38, 0x3A, 0x31, 0x38, 0x3A, 0x33,
			0x32, 0x2B, 0x30, 0x39, 0x3A, 0x30, 0x30, 0x22, 0x20, 0x78, 0x6D, 0x70, 0x3A, 0x4D, 0x6F, 0x64, 0x69, 0x66, 0x79, 0x44, 0x61, 0x74, 0x65, 0x3D, 0x22, 0x32, 0x30, 0x32, 0x31, 0x2D, 0x30, 0x37,
			0x2D, 0x32, 0x35, 0x54, 0x32, 0x30, 0x3A, 0x32, 0x32, 0x3A, 0x32, 0x38, 0x2B, 0x30, 0x39, 0x3A, 0x30, 0x30, 0x22, 0x20, 0x78, 0x6D, 0x70, 0x3A, 0x4D, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
			0x44, 0x61, 0x74, 0x65, 0x3D, 0x22, 0x32, 0x30, 0x32, 0x31, 0x2D, 0x30, 0x37, 0x2D, 0x32, 0x35, 0x54, 0x32, 0x30, 0x3A, 0x32, 0x32, 0x3A, 0x32, 0x38, 0x2B, 0x30, 0x39, 0x3A, 0x30, 0x30, 0x22,
			0x20, 0x64, 0x63, 0x3A, 0x66, 0x6F, 0x72, 0x6D, 0x61, 0x74, 0x3D, 0x22, 0x69, 0x6D, 0x61, 0x67, 0x65, 0x2F, 0x70, 0x6E, 0x67, 0x22, 0x20, 0x70, 0x68, 0x6F, 0x74, 0x6F, 0x73, 0x68, 0x6F, 0x70,
			0x3A, 0x43, 0x6F, 0x6C, 0x6F, 0x72, 0x4D, 0x6F, 0x64, 0x65, 0x3D, 0x22, 0x33, 0x22, 0x20, 0x70, 0x68, 0x6F, 0x74, 0x6F, 0x73, 0x68, 0x6F, 0x70, 0x3A, 0x49, 0x43, 0x43, 0x50, 0x72, 0x6F, 0x66,
			0x69, 0x6C, 0x65, 0x3D, 0x22, 0x73, 0x52, 0x47, 0x42, 0x20, 0x49, 0x45, 0x43, 0x36, 0x31, 0x39, 0x36, 0x36, 0x2D, 0x32, 0x2E, 0x31, 0x22, 0x20, 0x78, 0x6D, 0x70, 0x4D, 0x4D, 0x3A, 0x49, 0x6E,
			0x73, 0x74, 0x61, 0x6E, 0x63, 0x65, 0x49, 0x44, 0x3D, 0x22, 0x78, 0x6D, 0x70, 0x2E, 0x69, 0x69, 0x64, 0x3A, 0x63, 0x34, 0x35, 0x64, 0x37, 0x37, 0x32, 0x31, 0x2D, 0x63, 0x66, 0x38, 0x34, 0x2D,
			0x66, 0x38, 0x34, 0x65, 0x2D, 0x39, 0x62, 0x36, 0x36, 0x2D, 0x62, 0x37, 0x33, 0x31, 0x35, 0x65, 0x34, 0x32, 0x38, 0x30, 0x38, 0x33, 0x22, 0x20, 0x78, 0x6D, 0x70, 0x4D, 0x4D, 0x3A, 0x44, 0x6F,
			0x63, 0x75, 0x6D, 0x65, 0x6E, 0x74, 0x49, 0x44, 0x3D, 0x22, 0x61, 0x64, 0x6F, 0x62, 0x65, 0x3A, 0x64, 0x6F, 0x63, 0x69, 0x64, 0x3A, 0x70, 0x68, 0x6F, 0x74, 0x6F, 0x73, 0x68, 0x6F, 0x70, 0x3A,
			0x35, 0x63, 0x63, 0x32, 0x34, 0x66, 0x36, 0x65, 0x2D, 0x32, 0x37, 0x64, 0x37, 0x2D, 0x34, 0x62, 0x34, 0x31, 0x2D, 0x62, 0x36, 0x61, 0x31, 0x2D, 0x65, 0x33, 0x63, 0x38, 0x66, 0x63, 0x30, 0x31,
			0x61, 0x32, 0x65, 0x66, 0x22, 0x20, 0x78, 0x6D, 0x70, 0x4D, 0x4D, 0x3A, 0x4F, 0x72, 0x69, 0x67, 0x69, 0x6E, 0x61, 0x6C, 0x44, 0x6F, 0x63, 0x75, 0x6D, 0x65, 0x6E, 0x74, 0x49, 0x44, 0x3D, 0x22,
			0x78, 0x6D, 0x70, 0x2E, 0x64, 0x69, 0x64, 0x3A, 0x38, 0x36, 0x38, 0x38, 0x65, 0x34, 0x65, 0x35, 0x2D, 0x38, 0x34, 0x35, 0x62, 0x2D, 0x32, 0x34, 0x34, 0x37, 0x2D, 0x38, 0x61, 0x62, 0x31, 0x2D,
			0x31, 0x31, 0x66, 0x66, 0x36, 0x30, 0x66, 0x39, 0x66, 0x32, 0x66, 0x65, 0x22, 0x3E, 0x20, 0x3C, 0x70, 0x68, 0x6F, 0x74, 0x6F, 0x73, 0x68, 0x6F, 0x70, 0x3A, 0x54, 0x65, 0x78, 0x74, 0x4C, 0x61,
			0x79, 0x65, 0x72, 0x73, 0x3E, 0x20, 0x3C, 0x72, 0x64, 0x66, 0x3A, 0x42, 0x61, 0x67, 0x3E, 0x20, 0x3C, 0x72, 0x64, 0x66, 0x3A, 0x6C, 0x69, 0x20, 0x70, 0x68, 0x6F, 0x74, 0x6F, 0x73, 0x68, 0x6F,
			0x70, 0x3A, 0x4C, 0x61, 0x79, 0x65, 0x72, 0x4E, 0x61, 0x6D, 0x65, 0x3D, 0x22, 0x36, 0x30, 0x22, 0x20, 0x70, 0x68, 0x6F, 0x74, 0x6F, 0x73, 0x68, 0x6F, 0x70, 0x3A, 0x4C, 0x61, 0x79, 0x65, 0x72,
			0x54, 0x65, 0x78, 0x74, 0x3D, 0x22, 0x36, 0x30, 0x22, 0x2F, 0x3E, 0x20, 0x3C, 0x72, 0x64, 0x66, 0x3A, 0x6C, 0x69, 0x20, 0x70, 0x68, 0x6F, 0x74, 0x6F, 0x73, 0x68, 0x6F, 0x70, 0x3A, 0x4C, 0x61,
			0x79, 0x65, 0x72, 0x4E, 0x61, 0x6D, 0x65, 0x3D, 0x22, 0xC3, 0x97, 0x22, 0x20, 0x70, 0x68, 0x6F, 0x74, 0x6F, 0x73, 0x68, 0x6F, 0x70, 0x3A, 0x4C, 0x61, 0x79, 0x65, 0x72, 0x54, 0x65, 0x78, 0x74,
			0x3D, 0x22, 0xC3, 0x97, 0x22, 0x2F, 0x3E, 0x20, 0x3C, 0x2F, 0x72, 0x64, 0x66, 0x3A, 0x42, 0x61, 0x67, 0x3E, 0x20, 0x3C, 0x2F, 0x70, 0x68, 0x6F, 0x74, 0x6F, 0x73, 0x68, 0x6F, 0x70, 0x3A, 0x54,
			0x65, 0x78, 0x74, 0x4C, 0x61, 0x79, 0x65, 0x72, 0x73, 0x3E, 0x20, 0x3C, 0x78, 0x6D, 0x70, 0x4D, 0x4D, 0x3A, 0x48, 0x69, 0x73, 0x74, 0x6F, 0x72, 0x79, 0x3E, 0x20, 0x3C, 0x72, 0x64, 0x66, 0x3A,
			0x53, 0x65, 0x71, 0x3E, 0x20, 0x3C, 0x72, 0x64, 0x66, 0x3A, 0x6C, 0x69, 0x20, 0x73, 0x74, 0x45, 0x76, 0x74, 0x3A, 0x61, 0x63, 0x74, 0x69, 0x6F, 0x6E, 0x3D, 0x22, 0x63, 0x72, 0x65, 0x61, 0x74,
			0x65, 0x64, 0x22, 0x20, 0x73, 0x74, 0x45, 0x76, 0x74, 0x3A, 0x69, 0x6E, 0x73, 0x74, 0x61, 0x6E, 0x63, 0x65, 0x49, 0x44, 0x3D, 0x22, 0x78, 0x6D, 0x70, 0x2E, 0x69, 0x69, 0x64, 0x3A, 0x38, 0x36,
			0x38, 0x38, 0x65, 0x34, 0x65, 0x35, 0x2D, 0x38, 0x34, 0x35, 0x62, 0x2D, 0x32, 0x34, 0x34, 0x37, 0x2D, 0x38, 0x61, 0x62, 0x31, 0x2D, 0x31, 0x31, 0x66, 0x66, 0x36, 0x30, 0x66, 0x39, 0x66, 0x32,
			0x66, 0x65, 0x22, 0x20, 0x73, 0x74, 0x45, 0x76, 0x74, 0x3A, 0x77, 0x68, 0x65, 0x6E, 0x3D, 0x22, 0x32, 0x30, 0x32, 0x31, 0x2D, 0x30, 0x37, 0x2D, 0x32, 0x35, 0x54, 0x31, 0x38, 0x3A, 0x31, 0x38,
			0x3A, 0x33, 0x32, 0x2B, 0x30, 0x39, 0x3A, 0x30, 0x30, 0x22, 0x20, 0x73, 0x74, 0x45, 0x76, 0x74, 0x3A, 0x73, 0x6F, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x41, 0x67, 0x65, 0x6E, 0x74, 0x3D, 0x22,
			0x41, 0x64, 0x6F, 0x62, 0x65, 0x20, 0x50, 0x68, 0x6F, 0x74, 0x6F, 0x73, 0x68, 0x6F, 0x70, 0x20, 0x43, 0x43, 0x20, 0x28, 0x57, 0x69, 0x6E, 0x64, 0x6F, 0x77, 0x73, 0x29, 0x22, 0x2F, 0x3E, 0x20,
			0x3C, 0x72, 0x64, 0x66, 0x3A, 0x6C, 0x69, 0x20, 0x73, 0x74, 0x45, 0x76, 0x74, 0x3A, 0x61, 0x63, 0x74, 0x69, 0x6F, 0x6E, 0x3D, 0x22, 0x63, 0x6F, 0x6E, 0x76, 0x65, 0x72, 0x74, 0x65, 0x64, 0x22,
			0x20, 0x73, 0x74, 0x45, 0x76, 0x74, 0x3A, 0x70, 0x61, 0x72, 0x61, 0x6D, 0x65, 0x74, 0x65, 0x72, 0x73, 0x3D, 0x22, 0x66, 0x72, 0x6F, 0x6D, 0x20, 0x61, 0x70, 0x70, 0x6C, 0x69, 0x63, 0x61, 0x74,
			0x69, 0x6F, 0x6E, 0x2F, 0x76, 0x6E, 0x64, 0x2E, 0x61, 0x64, 0x6F, 0x62, 0x65, 0x2E, 0x70, 0x68, 0x6F, 0x74, 0x6F, 0x73, 0x68, 0x6F, 0x70, 0x20, 0x74, 0x6F, 0x20, 0x69, 0x6D, 0x61, 0x67, 0x65,
			0x2F, 0x70, 0x6E, 0x67, 0x22, 0x2F, 0x3E, 0x20, 0x3C, 0x72, 0x64, 0x66, 0x3A, 0x6C, 0x69, 0x20, 0x73, 0x74, 0x45, 0x76, 0x74, 0x3A, 0x61, 0x63, 0x74, 0x69, 0x6F, 0x6E, 0x3D, 0x22, 0x73, 0x61,
			0x76, 0x65, 0x64, 0x22, 0x20, 0x73, 0x74, 0x45, 0x76, 0x74, 0x3A, 0x69, 0x6E, 0x73, 0x74, 0x61, 0x6E, 0x63, 0x65, 0x49, 0x44, 0x3D, 0x22, 0x78, 0x6D, 0x70, 0x2E, 0x69, 0x69, 0x64, 0x3A, 0x63,
			0x34, 0x35, 0x64, 0x37, 0x37, 0x32, 0x31, 0x2D, 0x63, 0x66, 0x38, 0x34, 0x2D, 0x66, 0x38, 0x34, 0x65, 0x2D, 0x39, 0x62, 0x36, 0x36, 0x2D, 0x62, 0x37, 0x33, 0x31, 0x35, 0x65, 0x34, 0x32, 0x38,
			0x30, 0x38, 0x33, 0x22, 0x20, 0x73, 0x74, 0x45, 0x76, 0x74, 0x3A, 0x77, 0x68, 0x65, 0x6E, 0x3D, 0x22, 0x32, 0x30, 0x32, 0x31, 0x2D, 0x30, 0x37, 0x2D, 0x32, 0x35, 0x54, 0x32, 0x30, 0x3A, 0x32,
			0x32, 0x3A, 0x32, 0x38, 0x2B, 0x30, 0x39, 0x3A, 0x30, 0x30, 0x22, 0x20, 0x73, 0x74, 0x45, 0x76, 0x74, 0x3A, 0x73, 0x6F, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x41, 0x67, 0x65, 0x6E, 0x74, 0x3D,
			0x22, 0x41, 0x64, 0x6F, 0x62, 0x65, 0x20, 0x50, 0x68, 0x6F, 0x74, 0x6F, 0x73, 0x68, 0x6F, 0x70, 0x20, 0x43, 0x43, 0x20, 0x28, 0x57, 0x69, 0x6E, 0x64, 0x6F, 0x77, 0x73, 0x29, 0x22, 0x20, 0x73,
			0x74, 0x45, 0x76, 0x74, 0x3A, 0x63, 0x68, 0x61, 0x6E, 0x67, 0x65, 0x64, 0x3D, 0x22, 0x2F, 0x22, 0x2F, 0x3E, 0x20, 0x3C, 0x2F, 0x72, 0x64, 0x66, 0x3A, 0x53, 0x65, 0x71, 0x3E, 0x20, 0x3C, 0x2F,
			0x78, 0x6D, 0x70, 0x4D, 0x4D, 0x3A, 0x48, 0x69, 0x73, 0x74, 0x6F, 0x72, 0x79, 0x3E, 0x20, 0x3C, 0x2F, 0x72, 0x64, 0x66, 0x3A, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6F, 0x6E,
			0x3E, 0x20, 0x3C, 0x2F, 0x72, 0x64, 0x66, 0x3A, 0x52, 0x44, 0x46, 0x3E, 0x20, 0x3C, 0x2F, 0x78, 0x3A, 0x78, 0x6D, 0x70, 0x6D, 0x65, 0x74, 0x61, 0x3E, 0x20, 0x3C, 0x3F, 0x78, 0x70, 0x61, 0x63,
			0x6B, 0x65, 0x74, 0x20, 0x65, 0x6E, 0x64, 0x3D, 0x22, 0x72, 0x22, 0x3F, 0x3E, 0x4A, 0x43, 0xAA, 0x61, 0x00, 0x00, 0x04, 0x29, 0x49, 0x44, 0x41, 0x54, 0x58, 0xC3, 0xCD, 0x57, 0x6B, 0x48, 0x54,
			0x41, 0x14, 0xBE, 0x52, 0x5A, 0x26, 0x21, 0x46, 0x2F, 0x0A, 0x49, 0x94, 0x2C, 0x09, 0x0A, 0xB3, 0x56, 0xDB, 0x32, 0xC8, 0x24, 0x90, 0x20, 0x90, 0x30, 0xCC, 0x3F, 0x92, 0xA8, 0xA0, 0x06, 0x66,
			0x68, 0x92, 0x65, 0x04, 0x49, 0x48, 0x22, 0x84, 0x94, 0x61, 0x28, 0x3D, 0x29, 0x14, 0x8C, 0x1E, 0x54, 0x8B, 0xA2, 0x85, 0x69, 0x45, 0x61, 0x9B, 0x6C, 0x59, 0x66, 0x1A, 0x61, 0x69, 0x9B, 0x8F,
			0xC5, 0x90, 0x36, 0x62, 0xE1, 0x74, 0xBE, 0x43, 0x23, 0xD7, 0xF5, 0x75, 0xCD, 0xB0, 0x06, 0x06, 0x87, 0xBD, 0xE3, 0x7C, 0xDF, 0x7C, 0xE7, 0x3B, 0xE7, 0xDC, 0xAB, 0x69, 0x9A, 0x16, 0x69, 0x32,
			0x99, 0x3A, 0x93, 0x93, 0x93, 0x29, 0x35, 0x35, 0x75, 0x46, 0x26, 0xB0, 0x80, 0xC9, 0xD8, 0x5B, 0xB4, 0x88, 0x88, 0x88, 0x36, 0x97, 0xCB, 0x45, 0x33, 0x3D, 0x80, 0x09, 0x6C, 0x2D, 0x21, 0x21,
			0x81, 0xFE, 0xD5, 0x00, 0xF6, 0xFF, 0x4B, 0xE0, 0x5B, 0x6B, 0x2B, 0xB9, 0x9C, 0xCE, 0xBF, 0x02, 0xE4, 0xEC, 0xE9, 0x91, 0x69, 0x98, 0x80, 0xA3, 0xB9, 0x99, 0xBA, 0x62, 0x62, 0xA8, 0xB3, 0xA4,
			0x64, 0xDA, 0x24, 0x00, 0xFC, 0xF6, 0xC8, 0x11, 0x99, 0xEE, 0x24, 0xC6, 0x24, 0xF0, 0xD3, 0xE1, 0xA0, 0xF6, 0xC4, 0x44, 0x72, 0x2E, 0x5A, 0x44, 0xF6, 0x4D, 0x9B, 0xA6, 0x45, 0x42, 0x81, 0x3B,
			0xD6, 0xAC, 0x91, 0xD9, 0x7E, 0xF2, 0xA4, 0x71, 0x05, 0xBA, 0xA3, 0xA2, 0x84, 0xC4, 0xC7, 0xF5, 0xEB, 0xA9, 0x62, 0xD7, 0x2E, 0x3A, 0x55, 0x50, 0x40, 0x85, 0x85, 0x85, 0xD4, 0xD1, 0xD1, 0x31,
			0x2E, 0xE0, 0xC0, 0xC0, 0x00, 0x95, 0x95, 0x95, 0xC9, 0xBE, 0x62, 0x06, 0x7E, 0x9A, 0x9E, 0x3E, 0x0C, 0x6E, 0x58, 0x01, 0x35, 0x3E, 0x35, 0x34, 0xD0, 0x83, 0xE5, 0xCB, 0xE9, 0x8B, 0xA7, 0x27,
			0xD9, 0x82, 0x82, 0xE8, 0xFA, 0xDE, 0xBD, 0x54, 0x71, 0xEE, 0x1C, 0x45, 0x31, 0xB1, 0xB4, 0xB4, 0xB4, 0x51, 0xFB, 0xF3, 0xF2, 0xF2, 0x28, 0x38, 0x38, 0x98, 0x8A, 0x8B, 0x8B, 0xE9, 0x02, 0xCF,
			0xCA, 0x9D, 0x3B, 0xC9, 0xEA, 0xE3, 0x43, 0xAF, 0xFD, 0xFC, 0xC6, 0x04, 0x9F, 0x90, 0xC0, 0xE0, 0xE0, 0xA0, 0x80, 0x5C, 0xCE, 0xCF, 0x1F, 0x56, 0x42, 0x1F, 0x0E, 0x80, 0xE8, 0x49, 0x00, 0x3C,
			0x3E, 0x3E, 0x9E, 0x86, 0x86, 0x86, 0x46, 0xC9, 0x7E, 0x25, 0x3A, 0x9A, 0x0E, 0x72, 0x48, 0xA7, 0x94, 0x05, 0x38, 0xB0, 0xBC, 0xBC, 0x5C, 0xD6, 0x1D, 0xB5, 0xB5, 0xF4, 0x74, 0xE5, 0x4A, 0xEA,
			0xF5, 0xF6, 0x16, 0x25, 0xDE, 0x14, 0x15, 0x09, 0x89, 0x8C, 0x8C, 0x0C, 0xAA, 0xE5, 0x67, 0x90, 0x1D, 0x37, 0x57, 0xE0, 0xB8, 0x79, 0xEB, 0x82, 0x05, 0xF4, 0x7E, 0xE9, 0x52, 0xB2, 0xE5, 0xE4,
			0xC8, 0x6F, 0x6A, 0xAF, 0x61, 0x02, 0x7E, 0x2C, 0x1B, 0x0E, 0xC4, 0xC4, 0xE1, 0x67, 0x33, 0x33, 0xE9, 0x55, 0x68, 0x28, 0xF5, 0xCD, 0x9B, 0x47, 0x2F, 0x03, 0x02, 0x44, 0x09, 0xCB, 0xED, 0xDB,
			0x52, 0x56, 0x11, 0x73, 0x28, 0xA2, 0xC0, 0x21, 0x79, 0xD7, 0x8A, 0x15, 0x74, 0x7E, 0xF3, 0x66, 0xCA, 0xDE, 0xB7, 0x4F, 0xCE, 0xB3, 0x58, 0x2C, 0xB2, 0xD7, 0x10, 0x81, 0xAA, 0xAA, 0x2A, 0xCA,
			0x67, 0xE9, 0x31, 0xA0, 0x02, 0xD4, 0x80, 0xF1, 0x6A, 0x4A, 0x4B, 0xA9, 0x6D, 0xE3, 0x46, 0xEA, 0x9D, 0x3B, 0x57, 0x94, 0x38, 0xC1, 0xE6, 0x7C, 0xFE, 0xF8, 0x31, 0xC5, 0xC5, 0xC5, 0xD1, 0x23,
			0x26, 0x03, 0xD9, 0x9F, 0x79, 0x79, 0x51, 0xDF, 0xEA, 0xD5, 0xC3, 0x31, 0x0F, 0x0B, 0x0B, 0x93, 0xFF, 0xC5, 0x45, 0x70, 0x29, 0x43, 0x04, 0xE0, 0x60, 0x25, 0x3F, 0xA4, 0x8B, 0xE6, 0x18, 0xC2,
			0x78, 0x58, 0x67, 0xEE, 0xD8, 0x41, 0xD5, 0x1C, 0x8A, 0x7E, 0x36, 0x57, 0xE7, 0xDA, 0xB5, 0xA2, 0xC4, 0x56, 0x7F, 0x7F, 0x6A, 0x3E, 0x70, 0x80, 0x7A, 0x57, 0xAD, 0x12, 0x02, 0x7A, 0xC3, 0xE1,
			0xD6, 0xB8, 0x3D, 0x06, 0xCE, 0x70, 0xCF, 0xA0, 0x31, 0x09, 0x00, 0xB0, 0xA5, 0xA5, 0x45, 0xD6, 0x90, 0x5F, 0xAD, 0xD5, 0x80, 0x27, 0x6A, 0x97, 0x2C, 0x91, 0x70, 0x0C, 0xB2, 0x12, 0xA7, 0x35,
			0x4D, 0xFE, 0xF6, 0xF0, 0x3C, 0xCE, 0xE1, 0xD1, 0xBB, 0xDD, 0xFD, 0x32, 0xEE, 0x3E, 0x98, 0x94, 0x00, 0x18, 0xDB, 0xED, 0x76, 0x09, 0x0B, 0x0E, 0x52, 0xBF, 0x77, 0x37, 0x36, 0xD2, 0x5D, 0x48,
			0xCA, 0xE0, 0x98, 0xAE, 0x39, 0x73, 0xA8, 0x81, 0x5B, 0xEC, 0xEE, 0xC8, 0xC8, 0x09, 0xD5, 0x9C, 0x32, 0x81, 0xA6, 0xA6, 0x26, 0x0A, 0x0C, 0x0C, 0xA4, 0xDC, 0xDC, 0x5C, 0x39, 0x0C, 0xCF, 0x94,
			0xE1, 0xEE, 0x71, 0xDA, 0xFD, 0x98, 0x35, 0x4B, 0x08, 0x38, 0x17, 0x2F, 0xA6, 0x46, 0xDE, 0x13, 0xC3, 0x32, 0xFF, 0x55, 0x02, 0x88, 0x5B, 0x7D, 0x7D, 0xFD, 0x88, 0xE7, 0x11, 0xEC, 0x70, 0xC4,
			0xBC, 0x3F, 0x24, 0x84, 0xFA, 0x3D, 0x3C, 0xE8, 0x06, 0x13, 0xF8, 0x39, 0x7F, 0x3E, 0x7D, 0x58, 0xB7, 0x8E, 0x0E, 0x73, 0xC8, 0xF4, 0x65, 0xFB, 0x8F, 0x08, 0xE0, 0xB6, 0x90, 0x1C, 0x43, 0x83,
			0xC4, 0x6E, 0xB5, 0x1D, 0x71, 0x46, 0xBC, 0x51, 0x64, 0x92, 0xF8, 0x79, 0xCA, 0x86, 0x0D, 0xF4, 0xCE, 0x64, 0xA2, 0xEF, 0x0B, 0x17, 0xD2, 0x9D, 0xD9, 0xB3, 0x47, 0xF4, 0x0E, 0x64, 0x08, 0x54,
			0x54, 0x7E, 0x42, 0xCD, 0x98, 0x94, 0x80, 0xCA, 0x6B, 0xC5, 0x5A, 0xDD, 0x00, 0xE0, 0x2D, 0xD9, 0xD9, 0xE2, 0x74, 0x38, 0x1E, 0x2A, 0x40, 0x0D, 0x38, 0xFD, 0xFE, 0x99, 0x33, 0x52, 0x31, 0x51,
			0xB6, 0xDF, 0x31, 0x31, 0x90, 0x70, 0x7C, 0xFD, 0x2A, 0xE1, 0x83, 0x87, 0x30, 0xB1, 0x36, 0x94, 0x86, 0xFA, 0xCA, 0x06, 0x13, 0x62, 0x7D, 0x6C, 0xFF, 0x7E, 0xBA, 0xC8, 0x00, 0xA8, 0xED, 0x9D,
			0xCB, 0x96, 0x49, 0xAA, 0x59, 0xAE, 0x5D, 0x13, 0x70, 0x55, 0x37, 0xD0, 0xC0, 0xDE, 0x70, 0xDE, 0x83, 0xC4, 0x0B, 0x26, 0x56, 0x64, 0x36, 0x4B, 0xEF, 0x98, 0x72, 0x21, 0x52, 0xA5, 0x58, 0xA9,
			0xD0, 0x65, 0xB3, 0xD1, 0xCD, 0xD8, 0x58, 0x01, 0x86, 0xF4, 0x00, 0xEF, 0xFF, 0x4D, 0xCC, 0x6A, 0xB5, 0xCA, 0x1E, 0x55, 0x70, 0x40, 0x02, 0xE1, 0x70, 0xB0, 0x27, 0xDA, 0xD8, 0x23, 0x50, 0xE2,
			0x5B, 0x5F, 0x9F, 0x78, 0x49, 0xED, 0x35, 0xDC, 0x0D, 0xD1, 0x6C, 0x0A, 0xB2, 0xB2, 0x44, 0x6A, 0x7D, 0x4B, 0x7D, 0x51, 0x57, 0x27, 0x8D, 0x07, 0x24, 0xD5, 0x40, 0x98, 0x54, 0xCD, 0xD0, 0xB7,
			0xF2, 0x4F, 0x5C, 0x39, 0x51, 0x31, 0x8F, 0x1E, 0x3A, 0x34, 0xF5, 0x57, 0x32, 0xC4, 0xFC, 0xD2, 0xF6, 0xED, 0x12, 0x73, 0x9B, 0xAF, 0x2F, 0x95, 0xF0, 0x2D, 0x63, 0xB9, 0xBE, 0x23, 0x4B, 0xAA,
			0xAB, 0xAB, 0x47, 0xED, 0xC7, 0x6F, 0xAA, 0x6A, 0xE6, 0xEF, 0xD9, 0x23, 0xC5, 0xEA, 0x33, 0xA7, 0xA9, 0x95, 0xC3, 0x31, 0xDE, 0x4B, 0xCD, 0xB8, 0x04, 0xDC, 0x5B, 0xEA, 0xC3, 0xA4, 0x24, 0xAA,
			0xA9, 0xAC, 0x9C, 0xF0, 0x65, 0x64, 0xB8, 0x52, 0xF2, 0x1E, 0xA4, 0xDB, 0x93, 0xAB, 0x57, 0xC7, 0x6C, 0xE5, 0x86, 0x5E, 0xC9, 0xF4, 0xE0, 0xE3, 0xBD, 0x4C, 0x18, 0x19, 0xFA, 0x70, 0x28, 0x12,
			0x86, 0x14, 0xE8, 0xBE, 0x75, 0x8B, 0xBA, 0xB7, 0x6D, 0x9B, 0x16, 0xB8, 0x3B, 0x09, 0x4C, 0xAC, 0x0D, 0x7B, 0xC0, 0x5E, 0x53, 0x33, 0x6D, 0x70, 0x3D, 0x09, 0x77, 0xF0, 0xFF, 0xFF, 0xC3, 0x64,
			0xC6, 0x08, 0x98, 0xCD, 0xE6, 0x7F, 0xF6, 0x71, 0x0A, 0x6C, 0x0D, 0x9F, 0xE7, 0xE1, 0xE1, 0xE1, 0x1F, 0x52, 0x52, 0x52, 0x66, 0xEC, 0xF3, 0x1C, 0x58, 0xC0, 0xC4, 0xE7, 0xF9, 0x2F, 0xF6, 0xF7,
			0xEE, 0x64, 0xA8, 0x03, 0x4D, 0x46, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4E, 0x44, 0xAE, 0x42, 0x60, 0x82,
		};

		private static class Array<T>
		{
			public static readonly T[] Empty = new T[0];
		}
    }
}
